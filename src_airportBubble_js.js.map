{"version":3,"file":"src_airportBubble_js.js","mappings":";;;;;;;;;;;;;;;;AAA0B;AACY;AAS1B;AAEZ,SAASS,YAAYA,CAACC,KAAK,EAAE;EAC3B,IAAQC,KAAK,GAAsBD,KAAK,CAAhCC,KAAK;IAAEC,MAAM,GAAcF,KAAK,CAAzBE,MAAM;IAAEC,OAAO,GAAKH,KAAK,CAAjBG,OAAO;;EAE9B;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,IAAIC,SAAS,GAAGH,KAAK,GAAG,IAAI;EAC5B,IAAII,WAAW,GAAGT,+CAAW,CAAC,CAAC,CAACU,KAAK,CAAC,CAAC,CAAC,EAAEF,SAAS,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;EAEvE,IAAIC,UAAU,GAAGhB,mDAAe,CAACW,OAAO,CAAC,CACtCM,KAAK,CAAC,GAAG,EAAEhB,0CAAM,CAACQ,KAAK,GAAG,CAAC,CAAC,CAACS,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC5CD,KAAK,CAAC,GAAG,EAAEf,0CAAM,CAACQ,MAAM,GAAG,CAAC,CAAC,CAACQ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC7CD,KAAK,CACJ,SAAS,EACTd,gDAAY,CAAC,UAACgB,CAAC;IAAA,OAAKN,WAAW,CAACM,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EAAA,EAC9C,CAAC,CACAC,IAAI,CAAC,CAAC;EAET,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAE,EAAEA,CAAC,EAAEN,UAAU,CAACO,IAAI,CAAC,CAAC;EAE/C,oBACEzB,gDAAA,YACGa,OAAO,CAACc,GAAG,CAAC,UAACC,MAAM,EAAEC,GAAG;IAAA,oBACvB7B,gDAAA;MACE8B,GAAG,EAAED,GAAI;MACTE,EAAE,EAAEH,MAAM,CAACI,CAAE;MACbC,EAAE,EAAEL,MAAM,CAACM,CAAE;MACbC,CAAC,EAAEpB,WAAW,CAACa,MAAM,CAACN,KAAK,CAAE;MAC7Bc,IAAI,EAAC,SAAS;MACdC,MAAM,EAAC,OAAO;MACdC,WAAW,EAAC;IAAG,CAChB,CAAC;EAAA,CACH,CAAC,EACDzB,OAAO,CAAC0B,KAAK,CAAC,CAAC,CAAC,CAAC,CAACZ,GAAG,CAAC,UAACC,MAAM,EAAEC,GAAG;IAAA,oBACjC7B,gDAAA;MAAG8B,GAAG,EAAED;IAAI,gBACV7B,gDAAA;MACE+B,EAAE,EAAEH,MAAM,CAACI,CAAE;MACbC,EAAE,EAAEL,MAAM,CAACM,CAAE;MACbC,CAAC,EAAEpB,WAAW,CAACa,MAAM,CAACN,KAAK,CAAE;MAC7Bc,IAAI,EAAC,SAAS;MACdC,MAAM,EAAC,OAAO;MACdC,WAAW,EAAC;IAAG,CAChB,CAAC,eACFtC,gDAAA;MACEgC,CAAC,EAAEJ,MAAM,CAACI,CAAE;MACZE,CAAC,EAAEN,MAAM,CAACM,CAAE;MACZM,EAAE,EAAE,CAACzB,WAAW,CAACa,MAAM,CAACN,KAAK,CAAE;MAC/BmB,KAAK,EAAE;QACLC,UAAU,EAAE,QAAQ;QACpBL,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,OAAO;QACpBF,IAAI,EAAE,SAAS;QACfO,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE,SAAS;QACrBC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE;MAClB;IAAE,GAGDlB,MAAM,CAACN,KACJ,CACL,CAAC;EAAA,CACL,CACA,CAAC;AAER","sources":["webpack://assignment_5/./src/airportBubble.js"],"sourcesContent":["import React from \"react\";\nimport { groupByCity } from \"./utils\";\nimport {\n  forceSimulation,\n  forceX,\n  forceY,\n  forceCollide,\n  scaleLinear,\n  min,\n  max,\n} from \"d3\";\n\nfunction PlayerBubble(props) {\n  const { width, height, players } = props;\n\n  // let cities;\n\n  // if (selectedAirline) {\n  //   let selectedRoutes = routes.filter((a) => a.AirlineID === selectedAirline);\n  //   cities = groupByCity(selectedRoutes);\n  // } else {\n  //   cities = groupByCity(routes);\n  // }\n\n  // cities = cities.sort((a, b) => a.Count - b.Count);\n\n  let maxRadius = width * 0.15;\n  let radiusScale = scaleLinear().range([2, maxRadius]).domain([10, 140]);\n\n  let simulation = forceSimulation(players)\n    .force(\"x\", forceX(width / 2).strength(0.05))\n    .force(\"y\", forceY(height / 2).strength(0.05))\n    .force(\n      \"collide\",\n      forceCollide((d) => radiusScale(d.Goals) + 2)\n    )\n    .stop();\n\n  for (let i = 0; i < 200; ++i) simulation.tick();\n\n  return (\n    <g>\n      {players.map((player, idx) => (\n        <circle\n          key={idx}\n          cx={player.x}\n          cy={player.y}\n          r={radiusScale(player.Goals)}\n          fill=\"#2a5599\"\n          stroke=\"black\"\n          strokeWidth=\"2\"\n        />\n      ))}\n      {players.slice(-5).map((player, idx) => (\n        <g key={idx}>\n          <circle\n            cx={player.x}\n            cy={player.y}\n            r={radiusScale(player.Goals)}\n            fill=\"#ADD8E6\"\n            stroke=\"black\"\n            strokeWidth=\"2\"\n          />\n          <text\n            x={player.x}\n            y={player.y}\n            dy={-radiusScale(player.Goals)}\n            style={{\n              textAnchor: \"middle\",\n              stroke: \"pink\",\n              strokeWidth: \"0.5em\",\n              fill: \"#992a2a\",\n              fontSize: 16,\n              fontFamily: \"cursive\",\n              paintOrder: \"stroke\",\n              strokeLinejoin: \"round\",\n            }}\n          >\n            {/* {player.Player} */}\n            {player.Goals}\n          </text>\n        </g>\n      ))}\n    </g>\n  );\n}\n\nexport { PlayerBubble };\n"],"names":["React","groupByCity","forceSimulation","forceX","forceY","forceCollide","scaleLinear","min","max","PlayerBubble","props","width","height","players","maxRadius","radiusScale","range","domain","simulation","force","strength","d","Goals","stop","i","tick","createElement","map","player","idx","key","cx","x","cy","y","r","fill","stroke","strokeWidth","slice","dy","style","textAnchor","fontSize","fontFamily","paintOrder","strokeLinejoin"],"sourceRoot":""}